<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>mkcert</id>
    <version>1.4.4</version>
    <title>mkcert</title>
    <authors>Filippo Valsorda</authors>
    <owners>majkinetor, Stefan Scherer</owners>
    <licenseUrl>https://github.com/FiloSottile/mkcert/blob/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/FiloSottile/mkcert</projectUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <description>`mkcert` is a simple CLI tool for making locally-trusted development certificates. It requires no configuration.

`mkcert` automatically creates and installs a local CA in the system root store, and generates locally-trusted certificates. mkcert does not automatically configure servers to use the certificates, though, that's up to you.

```sh
$ mkcert -install
Created a new local CA at "/Users/filippo/Library/Application Support/mkcert" üí•
The local CA is now installed in the system trust store! ‚ö°Ô∏è
The local CA is now installed in the Firefox trust store (requires restart)! ü¶ä

$ mkcert example.com "*.example.org" myapp.dev localhost 127.0.0.1 ::1
Using the local CA at "/Users/filippo/Library/Application Support/mkcert" ‚ú®

Created a new certificate valid for the following names üìú
 - "example.com"
 - "*.example.org"
 - "myapp.dev"
 - "localhost"
 - "127.0.0.1"
 - "::1"

The certificate is at "./example.com+5.pem" and the key at "./example.com+5-key.pem" ‚úÖ
```</description>
    <summary>A simple zero-config tool to make locally trusted development certificates with any names you'd like.</summary>
    <releaseNotes>https://github.com/FiloSottile/mkcert/releases/tag/v1.4.4</releaseNotes>
    <tags>cli foss cross-platform development certificates</tags>
    <packageSourceUrl>https://github.com/majkinetor/chocolatey/tree/master/mkcert</packageSourceUrl>
    <docsUrl>https://github.com/FiloSottile/mkcert/blob/master/README.md</docsUrl>
    <bugTrackerUrl>https://github.com/FiloSottile/mkcert/issues</bugTrackerUrl>
  </metadata>
</package>